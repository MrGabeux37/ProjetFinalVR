#VRML V2.0 utf8

#caméra suivant la balle
DEF camera Transform{
  center -6.0 -4.2 0 #centre de rotation de la caméra
  children DEF camcam Viewpoint{
    fieldOfView 0.785392
    position 0.0 0.0 0.0 #-6.0 -3.5 3.0
    jump FALSE
    orientation 0.0 1.0 0.0 0.0
    description "Balle"
  }
}

DEF BoutonTerrain1 Transform{
  translation -1.0 0 -5.0
  children [
  Shape{
  appearance Appearance{ material Material{ diffuseColor 1.0 0 0}}
  geometry Box {size 0.5 0.5 0.5}
},
  DEF terrain1 TouchSensor{}
]
}

#terrain noel
DEF Noel Transform{
  translation 10.0 0 -6.0
  rotation 0 1 0 1.57
  children Inline {url["SnowHole.wrl"]}
}

DEF Lune Transform{
  translation 14.35 -3.25 -9.75
  rotation 0 0 0 0
  scale 1 1 1
  children Inline {url["TerrainLune.wrl"]}
}

#balle de golf
DEF Balle Transform{
  #translation -6.0 -4.2 0
  children Inline{url["golfball.wrl"]}
}

#marche pas encore !!
#Ne doit pas fonctionner avec le script mis en bas
DEF Horloge TimeSensor{
  cycleInterval 1
  startTime 0
}

DEF ChoiceTimer TimeSensor{
  enabled FALSE
  loop FALSE
  cycleInterval 0.02
}

DEF	KS KbdSensor{ isActive TRUE }

DEF ChoiceTerrain1 Script {
	eventIn		SFBool	Choix
	eventOut	SFVec3f	PosBalle
  eventOut	SFVec3f	PosCam

	url       "javascript:
	function Choix(value, time) {
 		 if(value){
       PosBalle[0] = -6.0
       PosBalle[1] = -4.2
       PosBalle[2] = 0

       PosCam[0] = -6.0
       PosCam[1] = -3.5
       PosCam[2] = 3.0
     }
	}
	"
}

DEF	script Script	{
  eventIn	SFInt32	KeyPressed
  eventIn SFFloat set_fraction
	eventOut SFRotation	OrientationCam
  eventOut SFVec3f  value_changedBalle
  eventOut SFVec3f  value_changedCam
  eventOut SFTime TimeToStart
  eventOut SFFloat cycleInterval
  field SFNode CameraPos USE camera #objet transform camera
	field SFNode Camera USE camcam  # objet viewpoint camera
  field SFNode GolfBall USE Balle # objet balle
  field SFFloat multiplicateur 0
  field SFFloat angleCam 0

  field SFFloat CamPosX 0
  field SFFloat CamPosY 0
  field SFFloat CamPosZ 0

  field SFFloat balleX 0
  field SFFloat balleY 0
  field SFFloat balleZ 0

  field SFFloat distanceBalle 0

    url ["javascript:

  angleCam = Camera.orientation[3]
  balleX = GolfBall.translation.x
  balleY = GolfBall.translation.y
  balleZ = GolfBall.translation.z
  CamPosX = CameraPos.translation.x
  CamPosY = CameraPos.translation.y
  CamPosZ = CameraPos.translation.z

	function KeyPressed(v, t){
      // Touche 'a' ou fleche gauche
      // tourne dans le sens horaire
      if (v == 65601 || v == 65573)
			{ angleCam = angleCam + 0.02; }

      // Touche 'd' ou fleche droite
      // tourne la caméra dans le sens anti-horaire
			if (v == 65604 || v == 65575)
			{ angleCam = angleCam - 0.02; }

      //Touche 'w' ou fleche haut
      // build up de la force (augmente la distance que la balle va parcourir)
      if (v == 65623 || v == 65574){
        if(multiplicateur < 6.0){
          multiplicateur += 0.5
        }
        if(multiplicateur>=6.0){
          multiplicateur = 6.0
        }
        distanceBalle = distanceBalle + 0.5*multiplicateur
      }
      //Touche 's' ou fleche bas
      //Reset la force du tir et multiplicateur
      if (v == 65552 || v == 65576){
        distanceBalle = 0
        multiplicateur = 0
      }
      //Touche 'enter'
      // calcul distance en X et Z de la balle selon l'angle de la caméra
      if (v == 65549){

        balleX = GolfBall.translation.x - (Math.sin(angleCam) * distanceBalle)
        balleZ = GolfBall.translation.z - (Math.cos(angleCam) * distanceBalle)

        CamPosX = CameraPos.translation.x - (Math.sin(angleCam) * distanceBalle)
        CamPosZ = CameraPos.translation.z - (Math.cos(angleCam) * distanceBalle)

        value_changedBalle[0]=balleX*fraction
        value_changedBalle[1]=balleY*fraction
        value_changedBalle[2]=balleZ*fraction

        value_changedCam[0]=CamPosX*fraction
        value_changedCam[1]=CamPosY*fraction
        value_changedCam[2]=CamPosZ*fraction

        TimeToStart=t
        distanceBalle=0
        multiplicateur=0
      }

		  OrientationCam[0] = 0;
			OrientationCam[1] = 1; //rotation sur l'axe y
			OrientationCam[2] = 0;
			OrientationCam[3] = angleCam;
	}

  function set_fraction(fraction, temps){

    value_changedBalle[0]=balleX*fraction
    value_changedBalle[1]=balleY*fraction
    value_changedBalle[2]=balleZ*fraction

    value_changedCam[0]=CamPosX*fraction
    value_changedCam[1]=CamPosY*fraction
    value_changedCam[2]=CamPosZ*fraction

  }
	"]	# Fin du corps du script
}

ROUTE terrain1.isActive TO ChoiceTimer.enabled
ROUTE ChoiceTimer.enabled TO ChoiceTerrain1.Choix
ROUTE ChoiceTerrain1.PosBalle TO Balle.set_translation
ROUTE ChoiceTerrain1.PosCam TO camcam.set_position
#entre dans le script quand on pèse une touche
ROUTE KS.keyDown TO script.KeyPressed
#rotation de la caméra autour de la balle
ROUTE script.OrientationCam TO camera.rotation
#avancement de la balle et Camera
ROUTE script.TimeToStart TO Horloge.startTime

ROUTE Horloge.fraction_changed TO script.set_fraction
ROUTE script.value_changedBalle TO Balle.set_translation

ROUTE Horloge.fraction_changed TO script.set_fraction
ROUTE script.value_changedCam TO camera.set_translation
