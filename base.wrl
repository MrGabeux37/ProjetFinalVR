#VRML V2.0 utf8

#caméra suivant la balle
DEF camera Transform{
  center -6.0 -4.2 0 #centre de rotation de la caméra
  children DEF camcam Viewpoint{
    fieldOfView 0.785392
    position -6.0 -3.5 3.0
    jump FALSE
    orientation 0 1.0 0 0.0
    description "Balle"
  }
}


#terrain noel
DEF Noel Transform{
  translation 10.0 0 -6.0
  rotation 0 1 0 1.57
  children Inline {url["SnowHole.wrl"]}
}

#balle de golf
DEF Balle Transform{
  translation -6.0 -4.2 0
  children Inline{url["golfball.wrl"]}
}

DEF Horloge TimeSensor{
  cycleInterval 1.5
  startTime 0
}

DEF	KS KbdSensor{ isActive TRUE }

DEF	script Script	{
  directOutput TRUE
  eventIn	SFInt32	KeyPressed
	eventOut SFRotation	OrientationCam
  eventOut SFVec3f  MoveBalle
  eventOut SFVec3f  MoveCamera
  field SFNode CameraPos USE camera #objet transform camera
	field SFNode Camera USE camcam  # objet viewpoint camera
  field SFNode GolfBall USE Balle # objet balle
  field SFFloat angleCam 0
  field SFFloat CamPosX 0
  field SFFloat CamPosY 0
  field SFFloat CamPosZ 0
  field SFFloat CamPosBeforeX 0
  field SFFloat CamPosBeforeY 0
  field SFFloat CamPosBeforeZ 0
  field SFFloat balleX 0
  field SFFloat balleY 0
  field SFFloat balleZ 0
  field SFFloat balleXBefore 0
  field SFFloat balleYBefore 0
  field SFFloat balleZBefore 0
  field SFFloat distanceBalle 0

    url ["javascript:

  angleCam = Camera.orientation[3]
  balleX = GolfBall.translation.x
  balleY = GolfBall.translation.y
  balleZ = GolfBall.translation.z
  balleXBefore = GolfBall.translation.x
  balleYBefore = GolfBall.translation.y
  balleZBefore = GolfBall.translation.z
  CamPosX = CameraPos.translation.x
  CamPosY = CameraPos.translation.y
  CamPosZ = CameraPos.translation.z
  CamPosBeforeX = CameraPos.translation.x
  CamPosBeforeY = CameraPos.translation.y
  CamPosBeforeZ = CameraPos.translation.z

	function KeyPressed(v, t){
      // Touche 'a'
      // tourne dans le sens horaire
      if (v == 65601)
			{ angleCam = angleCam - 0.02; }

      // Touche 'd'
      // tourne la caméra dans le sens anti-horaire
			if (v == 65604)
			{ angleCam = angleCam + 0.02; }

      //Touche 'w'
      // build up de la force (augmente la distance que la balle va parcourir)
      if (v == 65623){
        distanceBalle = distanceBalle + 5
        if(0 <= angleCam >= 1.57 ){
          balleX += (Math.sin(angleCam)*distanceBalle)
          //balleY =
          balleZ -= (Math.cos(angleCam)*distanceBalle)

          CamPosX += (Math.sin(angleCam)*distanceBalle)
          //CamPosY =
          CamPosZ -= (Math.cos(angleCam)*distanceBalle)
        }
        else if(1.57 < angleCam >= 3.14){
          balleX += (Math.sin(1.57-angleCam)*distanceBalle)
          //balleY =
          balleZ += (Math.cos(1.57-angleCam)*distanceBalle)

          CamPosX += (Math.sin(1.57-angleCam)*distanceBalle)
          //CamPosY =
          CamPosZ += (Math.cos(1.57-angleCam)*distanceBalle)
        }
        else if(3.14 < angleCam >= 4.71 ){
          balleX -= (Math.sin(3.14-angleCam)*distanceBalle)
          //balleY =
          balleZ += (Math.cos(3.14- ngleCam)*distanceBalle)

          CamPosX -= (Math.sin(3.14-angleCam)*distanceBalle)
          //CamPosY =
          CamPosZ += (Math.cos(3.14-angleCam)*distanceBalle)
        }
        else if(4.71 < angleCam >= 6.28){
          balleX -= (4.71-Math.sin(4.71-angleCam)*distanceBalle)
          //balleY =
          balleZ -= (4.71-Math.cos(4.71-angleCam)*distanceBalle)

          CamPosX -= (4.71-Math.sin(4.71-angleCam)*distanceBalle)
          //CamPosY =
          CamPosZ -= (4.71-Math.cos(4.71-angleCam)*distanceBalle)
        }
      }

      //Touche 'enter'
      // fait avancer la balle et la camera
      if (v == 65549){
        MoveBalle[0] =  balleX
        MoveBalle[1] =  balleY
        MoveBalle[2] =  balleZ
        MoveCamera[0] = CamPosX
        MoveCamera[1] = CamPosY
        MoveCamera[2] = CamPosZ
      }

		  OrientationCam[0] = 0;
			OrientationCam[1] = 1; //rotation sur l'axe y
			OrientationCam[2] = 0;
			OrientationCam[3] = angleCam;
	}



	"]	# Fin du corps du script
}

#entre dans le script quand on pèse une touche
ROUTE KS.keyDown TO script.KeyPressed
#rotation de la caméra autour de la balle
ROUTE script.OrientationCam TO camera.rotation
#avancement de la balle et Camera
ROUTE script.MoveBalle TO Balle.translation
ROUTE script.MoveCamera TO camera.translation
