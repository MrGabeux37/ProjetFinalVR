#VRML V2.0 utf8

#Fichier wrl permettant d'implémenter le gameplay au terrain

NavigationInfo{
  type ["NONE"]
}

#caméra suivant la balle
DEF camera Transform{
  center 0 0 0 #centre de rotation de la caméra
  children DEF camcam Viewpoint{
    fieldOfView 0.785392
    position 0 0.7 3.0
    jump FALSE
    orientation 0.0 1.0 0.0 0.0
    description "Balle"
  }
}

DEF Horloge TimeSensor{
  cycleInterval 1
  startTime 0
}

#terrain montagne
DEF Montagne Transform
{
  rotation 0 1 0 1.57
  translation 16 4.2 -5
  children Inline {url["SnowHole.wrl"]}
}

#balle de golf
DEF Balle Transform{
  translation 0 0 0
  children Inline{url["golfball.wrl"]}
}

DEF PutterSound Sound{
  intensity 2
  source DEF sonPutter AudioClip{
    url "GolfPutt.wav"
    loop FALSE
    stopTime 0.00000001
  }
  minFront 100.0
  minBack  100.0
  maxFront 100.0
  maxBack  100.0
}

DEF	KS KbdSensor{ isActive TRUE }

DEF	script Script	{
  eventIn	SFInt32	KeyPressed
  eventIn SFFloat set_fraction
	eventOut SFRotation	OrientationCam
  eventOut SFVec3f  value_changedBalle
  eventOut SFVec3f  value_changedCam
  eventOut SFTime TimeToStart
  eventOut SFFloat cycleInterval
  field SFNode CameraPos USE camera #objet transform camera
	field SFNode Camera USE camcam  # objet viewpoint camera
  field SFNode GolfBall USE Balle # objet balle
  field SFFloat multiplicateur 0
  field SFFloat angleCam 0
  field SFFloat CamPosX 0
  field SFFloat CamPosY 0
  field SFFloat CamPosZ 0
  field SFFloat balleX 0
  field SFFloat balleY 0
  field SFFloat balleZ 0
  field SFFloat distanceBalle 0

    url ["javascript:

  angleCam = Camera.orientation[3]
  balleX = GolfBall.translation.x
  balleY = GolfBall.translation.y
  balleZ = GolfBall.translation.z
  CamPosX = CameraPos.translation.x
  CamPosY = CameraPos.translation.y
  CamPosZ = CameraPos.translation.z

	function KeyPressed(v, t){
      // Touche 'a' ou fleche gauche
      // tourne dans le sens horaire
      if (v == 65601 || v == 65573)
			{ angleCam = angleCam + 0.02; }

      // Touche 'd' ou fleche droite
      // tourne la caméra dans le sens anti-horaire
			if (v == 65604 || v == 65575)
			{ angleCam = angleCam - 0.02; }

      //Touche 'w' ou fleche haut
      // build up de la force (augmente la distance que la balle va parcourir)
      if (v == 65623 || v == 65574){
        if(multiplicateur < 6.0){
          multiplicateur += 0.5
        }
        if(multiplicateur>=6.0){
          multiplicateur = 6.0
        }
        distanceBalle = distanceBalle + 0.5*multiplicateur
      }
      //Touche 's' ou fleche bas
      //Reset la force du tir et multiplicateur
      if (v == 65552 || v == 65576){
        distanceBalle = 0
        multiplicateur = 0
      }
      //Touche 'enter'
      // calcul distance en X et Z de la balle selon l'angle de la caméra
      if (v == 65549){

        balleX = GolfBall.translation.x - (Math.sin(angleCam) * distanceBalle)
        balleZ = GolfBall.translation.z - (Math.cos(angleCam) * distanceBalle)

        CamPosX = CameraPos.translation.x - (Math.sin(angleCam) * distanceBalle)
        CamPosZ = CameraPos.translation.z - (Math.cos(angleCam) * distanceBalle)

        TimeToStart=t
        distanceBalle=0
        multiplicateur=0
      }

		  OrientationCam[0] = 0;
			OrientationCam[1] = 1; //rotation sur l'axe y
			OrientationCam[2] = 0;
			OrientationCam[3] = angleCam;
	}

  function set_fraction(fraction, temps){

    value_changedBalle[0]=balleX
    value_changedBalle[1]=balleY
    value_changedBalle[2]=balleZ

    value_changedCam[0]=CamPosX
    value_changedCam[1]=CamPosY
    value_changedCam[2]=CamPosZ

  }
	"]	# Fin du corps du script
}


#entre dans le script quand on pèse une touche
ROUTE KS.keyDown TO script.KeyPressed


#rotation de la caméra autour de la balle
ROUTE script.OrientationCam TO camera.rotation


#avancement de la balle et Camera
ROUTE script.TimeToStart TO Horloge.startTime
ROUTE script.TimeToStart TO sonPutter.startTime

ROUTE Horloge.fraction_changed TO script.set_fraction
ROUTE script.value_changedBalle TO Balle.set_translation
ROUTE script.value_changedBalle TO PutterSound.set_location

ROUTE Horloge.fraction_changed TO script.set_fraction
ROUTE script.value_changedCam TO camera.set_translation
